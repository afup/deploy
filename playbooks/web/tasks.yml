---

- include_vars: ../vars/static.yml

- name: "Preparing deploy folder"
  deploy_helper:
    path: "{{ deploy_path }}"

- name: "Getting sources from git"
  git:
    repo: "{{ deploy_repository }}"
    dest: "{{ clone_cache_dir }}"
    accept_hostkey: True
    version: "{{ deploy_branch }}"
    force: yes
  no_log: True

- name: "Synchronizing files to the deploy folder"
  synchronize:
    src: "{{ clone_cache_dir }}/"
    dest: "{{ deploy_helper.new_release_path }}"
    rsync_opts:
      - "--exclude=.git"

- name: "Removing static files and directories from git repository"
  file:
    path: "{{ deploy_helper.new_release_path }}/{{ item }}"
    state: absent
    force: yes
  with_items:
    - "{{ static_files }}"
    - "{{ static_directories }}"

- name: "Create cron directory"
  file:
    path: "{{ deploy_helper.new_release_path }}/cron"
    state: directory

- name: "Linking config files"
  file:
    path: "{{ deploy_helper.new_release_path }}/{{ item }}"
    src: "{{ deploy_helper.shared_path }}/{{ item }}"
    state: link
    force: yes
  with_items:
    - "{{ static_files }}"
    - "{{ static_directories }}"

- name: "Downloading composer"
  get_url:
    url: https://getcomposer.org/installer
    dest: "{{ deploy_helper.new_release_path }}/composer_installer"

- name: "Installing composer"
  shell: "cat {{ deploy_helper.new_release_path }}/composer_installer | php -- --install-dir={{ deploy_helper.new_release_path }}  --version=1.10.16"
  environment:
    COMPOSER_HOME: "/tmp/tmp_composer_home_deploy"

- name: "Installing composer dependencies"
  shell: "php7.0 composer.phar install --no-dev --verbose --prefer-dist --optimize-autoloader --no-progress --no-interaction --working-dir={{ item }}"
  environment:
    COMPOSER_HOME: "/tmp/tmp_composer_home_deploy"
    SYMFONY_ENV: prod
  args:
    chdir: "{{ deploy_helper.new_release_path }}"
  with_items:
    - "{{ deploy_helper.new_release_path }}"

- name: "Removing composer installer"
  file:
    path: "{{ deploy_helper.new_release_path }}/composer_installer"
    state: absent

- name: "Removing composer.phar"
  file:
    path: "{{ deploy_helper.new_release_path }}/composer.phar"
    state: absent

- name: "Checking for package.json"
  stat:
    path: "{{ deploy_helper.new_release_path }}/package.json"
  register: packages

- name: "Installing yarn dependancies"
  shell: "yarn install --prod --non-interactive"
  args:
    chdir: "{{ deploy_helper.new_release_path }}"
  when: packages.stat.exists

- name: "Running npm build (webpack)"
  shell: "/usr/local/bin/npm run build"
  args:
    chdir: "{{ deploy_helper.new_release_path }}"
  when: packages.stat.exists

- name: "Removing unnecessary files/folders"
  file:
    path: "{{deploy_helper.new_release_path }}/{{ item }}"
    state: absent
  with_items:
    - "app/config/parameters.yml.dist-docker"
    - "htdocs/templates/forumphp2016/images/intervenants"
    - "htdocs/templates/forumphp2005/talks"
    - "var/logs"

- name: "Running SQL patches"
  shell: "php7.0 ./bin/phinx migrate"
  args:
    chdir: "{{ deploy_helper.new_release_path }}"

- name: "Changing current symlink"
  deploy_helper:
    path: "{{ deploy_path }}"
    release: '{{ deploy_helper.new_release }}'
    state: finalize
    keep_releases: 4

- name: "Reloading apache"
  shell: sudo /usr/sbin/apache2ctl graceful
  args:
    warn: False

...
